Index: configure.in
===================================================================
--- configure.in	(revision 5552)
+++ configure.in	(working copy)
@@ -6056,8 +6056,10 @@
 # Make subsystems available to makefiles.
 subsystems="$devsubsystems $subsystems $bindingsubsystems"
 AC_SUBST(subsystems)
-#
 
+# Find the size of OPA_ptr_t
+AC_CHECK_SIZEOF(OPA_ptr_t,-1,[#include "${master_top_srcdir}/src/openpa/src/opa_primitives.h"])
+
 if test "$enable_f77" != "yes" ; then
     # These are Fortran datatypes ONLY.  Set to null if no Fortran compiler.
     for name in CHARACTER INTEGER REAL LOGICAL COMPLEX DOUBLE_PRECISION \
Index: src/mpid/ch3/channels/nemesis/nemesis/include/mpid_nem_datatypes.h
===================================================================
--- src/mpid/ch3/channels/nemesis/nemesis/include/mpid_nem_datatypes.h	(revision 5552)
+++ src/mpid/ch3/channels/nemesis/nemesis/include/mpid_nem_datatypes.h	(working copy)
@@ -185,7 +185,7 @@
 typedef struct MPID_nem_cell
 {
     MPID_nem_cell_rel_ptr_t next;
-#if MPID_NEM_CELL_HEAD_LEN != SIZEOF_VOID_P
+#if MPID_NEM_CELL_HEAD_LEN != SIZEOF_OPA_PTR_T
     char padding[MPID_NEM_CELL_HEAD_LEN - sizeof(MPID_nem_cell_rel_ptr_t)];
 #endif
     volatile MPID_nem_pkt_t pkt;
@@ -222,11 +222,11 @@
 {
     MPID_nem_cell_rel_ptr_t head;
     MPID_nem_cell_rel_ptr_t tail;
-#if MPID_NEM_CACHE_LINE_LEN != (2 * SIZEOF_VOID_P)
+#if MPID_NEM_CACHE_LINE_LEN != (2 * SIZEOF_OPA_PTR_T)
     char padding1[MPID_NEM_CACHE_LINE_LEN - 2 * sizeof(MPID_nem_cell_rel_ptr_t)];
 #endif
     MPID_nem_cell_rel_ptr_t my_head;
-#if MPID_NEM_CACHE_LINE_LEN != SIZEOF_VOID_P
+#if MPID_NEM_CACHE_LINE_LEN != SIZEOF_OPA_PTR_T
     char padding2[MPID_NEM_CACHE_LINE_LEN - sizeof(MPID_nem_cell_rel_ptr_t)];
 #endif
 #if !defined(MPID_NEM_USE_LOCK_FREE_QUEUES)
