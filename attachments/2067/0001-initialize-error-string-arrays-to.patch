From f4e050b0f7104668afa2de61d0d7e4ed4986e7ff Mon Sep 17 00:00:00 2001
From: Rob Latham <robl@mcs.anl.gov>
Date: Tue, 22 Apr 2014 16:48:21 -0500
Subject: [PATCH] initialize error string arrays to ""

The standard says a user-defined error code without a string should
return "", not NULL, so initialize our internal arrays to "".

Closes #2067
---
 src/mpi/errhan/dynerrutil.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/mpi/errhan/dynerrutil.c b/src/mpi/errhan/dynerrutil.c
index 943e8c39..d7ab7b9c 100644
--- a/src/mpi/errhan/dynerrutil.c
+++ b/src/mpi/errhan/dynerrutil.c
@@ -44,8 +44,8 @@
 */
 
 static int  not_initialized = 1;  /* This allows us to use atomic decr */
-static const char *(user_class_msgs[ERROR_MAX_NCLASS]) = { 0 };
-static const char *(user_code_msgs[ERROR_MAX_NCODE]) = { 0 };
+static const char *(user_class_msgs[ERROR_MAX_NCLASS]) = { "" };
+static const char *(user_code_msgs[ERROR_MAX_NCODE]) = { "" };
 static int  first_free_class = 0;
 static int  first_free_code  = 1;  /* code 0 is reserved */
 
@@ -78,10 +78,10 @@ static void MPIR_Init_err_dyncodes( void )
     not_initialized = 0;
     
     for (i=0; i<ERROR_MAX_NCLASS; i++) {
-	user_class_msgs[i] = 0;
+	user_class_msgs[i] = "";
     }
     for (i=0; i<ERROR_MAX_NCODE; i++) {
-	user_code_msgs[i] = 0;
+	user_code_msgs[i] = "";
     }
     /* Set the routine to provides access to the dynamically created
        error strings */
@@ -152,7 +152,7 @@ int MPIR_Err_set_msg( int code, const char *msg_string )
     MPIU_Strncpy( str, msg_string, msg_len + 1 );
     if (errcode) {
 	if (errcode < first_free_code) {
-	    if (user_code_msgs[errcode]) {
+	    if (strncmp(user_code_msgs[errcode], "", 1)) {
 		MPIU_Free( (void*)(user_code_msgs[errcode]) );
 	    }
 	    user_code_msgs[errcode] = (const char *)str;
@@ -164,7 +164,7 @@ int MPIR_Err_set_msg( int code, const char *msg_string )
     }
     else {
 	if (errclass < first_free_class) {
-	    if (user_class_msgs[errclass]) {
+	    if (strncmp(user_class_msgs[errclass],"", 1)) {
 		MPIU_Free( (void*)(user_class_msgs[errclass]) );
 	    }
 	    user_class_msgs[errclass] = (const char *)str;
@@ -214,7 +214,7 @@ int MPIR_Err_add_class(void)
 
     /* Note that the MPI interface always adds an error class without
        a string.  */
-    user_class_msgs[new_class] = 0;
+    user_class_msgs[new_class] = "";
 
     return (new_class | ERROR_DYN_MASK);
 }
@@ -318,12 +318,12 @@ static int MPIR_Dynerrcodes_finalize( void *p ATTRIBUTE((unused)) )
     if (not_initialized == 0) {
 
         for (i=0; i<first_free_class; i++) {
-            if (user_class_msgs[i])
+            if (strncmp(user_class_msgs[i], "", 1))
                 MPIU_Free((char *) user_class_msgs[i]);
         }
 
         for (i=0; i<first_free_code; i++) {
-            if (user_code_msgs[i])
+            if (strncmp(user_code_msgs[i], "",1))
                 MPIU_Free((char *) user_code_msgs[i]);
         }
     }
-- 
1.9.1

